spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/static/,file:/static/,file:C:/Users/zYS2349/Documents/,file:C:/hearthStone/cardImg/,file:C:/hearthStone/Ueditor/
server.port = 8181
file.uploadPath = ''

#database
spring.datasource.driver-class-name = com.mysql.jdbc.Driver

spring.datasource.url = jdbc:mysql://127.0.0.1:3306/hearthstone?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false
spring.datasource.username = root
spring.datasource.password =2691894
# springBoot帮我们自动把上述配置注入到sqlSessionFactory

# mbatis自动生成model，mapper，xml配置
# 生成实体的包名
targetEntityBase = com.imooc.model
# 生成mapper的包名
tagetMapperBase = com.imooc.mapper
mapper.plugin = tk.mybatis.mapper.generator.MapperPlugin
mapper.Mapper = tk.mybatis.mapper.common.Mapper
driverClassPath = C:/Users/zYS2349/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar
mybatis.typeAliasesPackage = com.imooc.model
mybatis.mapperLocations = classpath*:mybatis/*.xml
spring.aop.proxy-target-class = true
mybatis.configuration.call-setters-on-nulls=true
mybatis.configuration.return-instance-for-empty-row=true

#thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# 控制台打印sql
mybatis.configuration.log-impl = org.apache.ibatis.logging.stdout.StdOutImpl
# 用阿里巴巴的数据源
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource

spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=



spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

user.workSpace=C:/hearthStone
